charAt(index) 🪡
Devuelve el carácter en la posición especificada.

"Hola".charAt(1); // "o"

concat(...strings) ➕
Une dos o más cadenas.

"Hola".concat(" Mundo"); // "Hola Mundo"

includes(substring) 🔍
Verifica si la cadena contiene una subcadena.

"Hola".includes("la"); // true

indexOf(substring) 📍
Encuentra la posición de la primera aparición de una subcadena.

"Hola".indexOf("a"); // 3

toUpperCase() 🔠
Convierte la cadena a mayúsculas.

"Hola".toUpperCase(); // "HOLA"

toLowerCase() 🔡
Convierte la cadena a minúsculas.

"Hola".toLowerCase(); // "hola"

split(separator) ✂️
Divide la cadena en un array según el separador.

"Hola,Mundo".split(","); // ["Hola", "Mundo"]

trim() ✂️
Elimina espacios en blanco al inicio y al final.

    " Hola ".trim(); // "Hola"

Métodos de Arrays 🧩

    push(elemento) 📦
    Añade un elemento al final del array.

const arr = [1, 2];
arr.push(3); // [1, 2, 3]

pop() 🎈
Elimina el último elemento del array y lo devuelve.

const arr = [1, 2, 3];
arr.pop(); // 3

shift() ⬅️
Elimina el primer elemento del array y lo devuelve.

const arr = [1, 2, 3];
arr.shift(); // 1

unshift(...elementos) ➡️
Añade elementos al principio del array.

const arr = [2, 3];
arr.unshift(1); // [1, 2, 3]

slice(inicio, fin) 🍕
Devuelve una copia de una parte del array.

const arr = [1, 2, 3, 4];
arr.slice(1, 3); // [2, 3]

splice(inicio, cantidad, ...nuevosElementos) 🧵
Añade o elimina elementos en el array.

const arr = [1, 2, 3];
arr.splice(1, 1, 4); // [1, 4, 3]

sort() 🔡
Ordena los elementos del array.

const arr = [3, 1, 2];
arr.sort(); // [1, 2, 3]

reverse() 🔄
Invierte el orden del array.

const arr = [1, 2, 3];
arr.reverse(); // [3, 2, 1]

map(callback) 🗺️
Crea un nuevo array aplicando una función a cada elemento.

[1, 2, 3].map(x => x * 2); // [2, 4, 6]

filter(callback) 🧹
Filtra los elementos que cumplen una condición.

[1, 2, 3].filter(x => x > 1); // [2, 3]

reduce(callback, valorInicial) ➕
Reduce los elementos a un solo valor.

[1, 2, 3].reduce((a, b) => a + b, 0); // 6